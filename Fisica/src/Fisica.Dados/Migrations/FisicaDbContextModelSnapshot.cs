// <auto-generated />
using System;
using Fisica.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Fisica.Dados.Migrations
{
    [DbContext(typeof(FisicaDbContext))]
    partial class FisicaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Fisica.Domains.AreaFisica", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AreaFisica");
                });

            modelBuilder.Entity("Fisica.Domains.Aula", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AreaFisicaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ProfessorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AreaFisicaId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Aula");
                });

            modelBuilder.Entity("Fisica.Domains.Cidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("Fisica.Domains.ComentarioAula", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AulaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AulaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ComentarioAula");
                });

            modelBuilder.Entity("Fisica.Domains.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CidadeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Fisica.Domains.Favorito", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AulaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SessaoAulaId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AulaId");

                    b.HasIndex("SessaoAulaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Favorito");
                });

            modelBuilder.Entity("Fisica.Domains.Forum", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Forum");
                });

            modelBuilder.Entity("Fisica.Domains.Instituicao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("EnderecoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Instituicao");
                });

            modelBuilder.Entity("Fisica.Domains.Noticia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AutorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Noticia");
                });

            modelBuilder.Entity("Fisica.Domains.Perfil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Aniversario")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Foto")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("Fisica.Domains.Replica", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("RespostaTopicoId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RespostaTopicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Replica");
                });

            modelBuilder.Entity("Fisica.Domains.RespostaTopico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TopicoForumId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TopicoForumId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostaTopico");
                });

            modelBuilder.Entity("Fisica.Domains.Segue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ProfessorId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Segue");
                });

            modelBuilder.Entity("Fisica.Domains.SessaoAula", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AulaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<int>("TipoSessao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AulaId");

                    b.ToTable("SessaoAula");
                });

            modelBuilder.Entity("Fisica.Domains.TopicoForum", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ForumId")
                        .HasColumnType("bigint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ForumId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TopicoForum");
                });

            modelBuilder.Entity("Fisica.Domains.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("InstituicaoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PerfilId")
                        .HasColumnType("bigint");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InstituicaoId");

                    b.HasIndex("PerfilId")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Fisica.Domains.VisualizacaoAula", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AulaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Maquina")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AulaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("VisualizacaoAula");
                });

            modelBuilder.Entity("Fisica.Domains.Widget", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Widget");
                });

            modelBuilder.Entity("Fisica.Domains.WidgetAula", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AulaId")
                        .HasColumnType("bigint");

                    b.Property<long>("WidgetId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AulaId");

                    b.HasIndex("WidgetId");

                    b.ToTable("WidgetAula");
                });

            modelBuilder.Entity("UsuarioUsuario", b =>
                {
                    b.Property<long>("SeguidoresId")
                        .HasColumnType("bigint");

                    b.Property<long>("SeguindoId")
                        .HasColumnType("bigint");

                    b.HasKey("SeguidoresId", "SeguindoId");

                    b.HasIndex("SeguindoId");

                    b.ToTable("UsuarioUsuario");
                });

            modelBuilder.Entity("Fisica.Domains.Aula", b =>
                {
                    b.HasOne("Fisica.Domains.AreaFisica", "AreaFisica")
                        .WithMany("Aulas")
                        .HasForeignKey("AreaFisicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fisica.Domains.Usuario", "Professor")
                        .WithMany("Aulas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaFisica");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Fisica.Domains.ComentarioAula", b =>
                {
                    b.HasOne("Fisica.Domains.Aula", "Aula")
                        .WithMany("Comentarios")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fisica.Domains.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Fisica.Domains.Endereco", b =>
                {
                    b.HasOne("Fisica.Domains.Cidade", "Cidade")
                        .WithMany("Enderecos")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Fisica.Domains.Favorito", b =>
                {
                    b.HasOne("Fisica.Domains.Aula", "Aula")
                        .WithMany("Favoritos")
                        .HasForeignKey("AulaId");

                    b.HasOne("Fisica.Domains.SessaoAula", "SessaoAula")
                        .WithMany("Favoritos")
                        .HasForeignKey("SessaoAulaId");

                    b.HasOne("Fisica.Domains.Usuario", "Usuario")
                        .WithMany("Favoritos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");

                    b.Navigation("SessaoAula");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Fisica.Domains.Instituicao", b =>
                {
                    b.HasOne("Fisica.Domains.Endereco", "Endereco")
                        .WithOne("Instituicao")
                        .HasForeignKey("Fisica.Domains.Instituicao", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Fisica.Domains.Noticia", b =>
                {
                    b.HasOne("Fisica.Domains.Usuario", "Autor")
                        .WithMany("Noticias")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("Fisica.Domains.Replica", b =>
                {
                    b.HasOne("Fisica.Domains.RespostaTopico", "RespostaTopico")
                        .WithMany("Replicas")
                        .HasForeignKey("RespostaTopicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fisica.Domains.Usuario", "Usuario")
                        .WithMany("Replicas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RespostaTopico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Fisica.Domains.RespostaTopico", b =>
                {
                    b.HasOne("Fisica.Domains.TopicoForum", "TopicoForum")
                        .WithMany("Respostas")
                        .HasForeignKey("TopicoForumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fisica.Domains.Usuario", "Usuario")
                        .WithMany("RespostasTopicos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TopicoForum");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Fisica.Domains.Segue", b =>
                {
                    b.HasOne("Fisica.Domains.Usuario", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fisica.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Fisica.Domains.SessaoAula", b =>
                {
                    b.HasOne("Fisica.Domains.Aula", "Aula")
                        .WithMany("Sessoes")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("Fisica.Domains.TopicoForum", b =>
                {
                    b.HasOne("Fisica.Domains.Forum", "Forum")
                        .WithMany("Topicos")
                        .HasForeignKey("ForumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fisica.Domains.Usuario", "Usuario")
                        .WithMany("TopicosForum")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forum");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Fisica.Domains.Usuario", b =>
                {
                    b.HasOne("Fisica.Domains.Instituicao", "Instituicao")
                        .WithMany("Usuarios")
                        .HasForeignKey("InstituicaoId");

                    b.HasOne("Fisica.Domains.Perfil", "Perfil")
                        .WithOne("Usuario")
                        .HasForeignKey("Fisica.Domains.Usuario", "PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituicao");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Fisica.Domains.VisualizacaoAula", b =>
                {
                    b.HasOne("Fisica.Domains.Aula", "Aula")
                        .WithMany("Visualizacoes")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fisica.Domains.Usuario", "Usuario")
                        .WithMany("Visualizacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Fisica.Domains.Widget", b =>
                {
                    b.HasOne("Fisica.Domains.Usuario", "Usuario")
                        .WithMany("Widgets")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Fisica.Domains.WidgetAula", b =>
                {
                    b.HasOne("Fisica.Domains.Aula", "Aula")
                        .WithMany("WidgetsAulas")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fisica.Domains.Widget", "Widget")
                        .WithMany("Aulas")
                        .HasForeignKey("WidgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("UsuarioUsuario", b =>
                {
                    b.HasOne("Fisica.Domains.Usuario", null)
                        .WithMany()
                        .HasForeignKey("SeguidoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fisica.Domains.Usuario", null)
                        .WithMany()
                        .HasForeignKey("SeguindoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fisica.Domains.AreaFisica", b =>
                {
                    b.Navigation("Aulas");
                });

            modelBuilder.Entity("Fisica.Domains.Aula", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Favoritos");

                    b.Navigation("Sessoes");

                    b.Navigation("Visualizacoes");

                    b.Navigation("WidgetsAulas");
                });

            modelBuilder.Entity("Fisica.Domains.Cidade", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("Fisica.Domains.Endereco", b =>
                {
                    b.Navigation("Instituicao")
                        .IsRequired();
                });

            modelBuilder.Entity("Fisica.Domains.Forum", b =>
                {
                    b.Navigation("Topicos");
                });

            modelBuilder.Entity("Fisica.Domains.Instituicao", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Fisica.Domains.Perfil", b =>
                {
                    b.Navigation("Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("Fisica.Domains.RespostaTopico", b =>
                {
                    b.Navigation("Replicas");
                });

            modelBuilder.Entity("Fisica.Domains.SessaoAula", b =>
                {
                    b.Navigation("Favoritos");
                });

            modelBuilder.Entity("Fisica.Domains.TopicoForum", b =>
                {
                    b.Navigation("Respostas");
                });

            modelBuilder.Entity("Fisica.Domains.Usuario", b =>
                {
                    b.Navigation("Aulas");

                    b.Navigation("Comentarios");

                    b.Navigation("Favoritos");

                    b.Navigation("Noticias");

                    b.Navigation("Replicas");

                    b.Navigation("RespostasTopicos");

                    b.Navigation("TopicosForum");

                    b.Navigation("Visualizacoes");

                    b.Navigation("Widgets");
                });

            modelBuilder.Entity("Fisica.Domains.Widget", b =>
                {
                    b.Navigation("Aulas");
                });
#pragma warning restore 612, 618
        }
    }
}
