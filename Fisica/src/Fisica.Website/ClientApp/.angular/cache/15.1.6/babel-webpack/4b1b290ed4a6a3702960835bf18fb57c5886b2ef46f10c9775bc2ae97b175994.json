{"ast":null,"code":"import _asyncToGenerator from \"C:/projetos/fisica/Fisica/src/Fisica.Website/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { AbstractHttpService } from './abstract-http.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuarioService extends AbstractHttpService {\n  constructor(baseUrl, httpClient) {\n    super(baseUrl, httpClient, 'api/usuario');\n    //Autenticacao\n    this.TOKEN = 'TOKEN';\n  }\n  inserir(usuario) {\n    return this.post('inserir', usuario);\n  }\n  getUsuarios() {\n    return this.get('buscar-usuarios');\n  }\n  excluir(id) {\n    return this.delete(`excluir/${id}`);\n  }\n  autoCadastro(usuario) {\n    return this.post('autocadastro', usuario);\n  }\n  login(login, senha) {\n    return this.post('login', {\n      Login: login,\n      Senha: senha\n    });\n  }\n  autenticar(token) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.limparDados();\n      localStorage.setItem(_this.TOKEN, token.replaceAll(\"\\\"\", \"\"));\n    })();\n  }\n  logout() {\n    this.limparDados();\n    return null;\n  }\n  isAutenticado() {\n    const token = localStorage.getItem(this.TOKEN);\n    return token != null && token != undefined && token != '';\n  }\n  validarUsuario() {\n    if (!this.isAutenticado()) window.location.replace('http://localhost:49828/#/website/');\n  }\n  limparDados() {\n    localStorage.removeItem(this.TOKEN);\n  }\n}\nUsuarioService.ɵfac = function UsuarioService_Factory(t) {\n  return new (t || UsuarioService)(i0.ɵɵinject('BASE_URL'), i0.ɵɵinject(i1.HttpClient));\n};\nUsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioService,\n  factory: UsuarioService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,SAASA,mBAAmB,QAAQ,yBAAyB;;;AAK7D,OAAM,MAAOC,cAAe,SAAQD,mBAAmB;EAErDE,YAAgCC,OAAe,EAAEC,UAAsB;IACrE,KAAK,CAACD,OAAO,EAAEC,UAAU,EAAE,aAAa,CAAC;IAmB3C;IACA,UAAK,GAAW,OAAO;EAnBvB;EAEOC,OAAO,CAACC,OAAgB;IAC7B,OAAO,IAAI,CAACC,IAAI,CAAU,SAAS,EAAED,OAAO,CAAC;EAC/C;EAEOE,WAAW;IAChB,OAAO,IAAI,CAACC,GAAG,CAAY,iBAAiB,CAAC;EAC/C;EAEOC,OAAO,CAACC,EAAU;IACvB,OAAO,IAAI,CAACC,MAAM,CAAM,WAAWD,EAAE,EAAE,CAAC;EAC1C;EAEOE,YAAY,CAACP,OAAgB;IAClC,OAAO,IAAI,CAACC,IAAI,CAAU,cAAc,EAAED,OAAO,CAAC;EACpD;EAKOQ,KAAK,CAACA,KAAa,EAAEC,KAAa;IACvC,OAAO,IAAI,CAACR,IAAI,CAAoB,OAAO,EAAE;MAAES,KAAK,EAAEF,KAAK;MAAEG,KAAK,EAAEF;IAAK,CAAE,CAAC;EAC9E;EAEMG,UAAU,CAACC,KAAa;IAAA;IAAA;MAC5B,KAAI,CAACC,WAAW,EAAE;MAClBC,YAAY,CAACC,OAAO,CAAC,KAAI,CAACC,KAAK,EAAEJ,KAAK,CAACK,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAAC;EAC/D;EAEOC,MAAM;IACX,IAAI,CAACL,WAAW,EAAE;IAClB,OAAO,IAAI;EACb;EAEOM,aAAa;IAClB,MAAMP,KAAK,GAAGE,YAAY,CAACM,OAAO,CAAC,IAAI,CAACJ,KAAK,CAAC;IAC9C,OAAQJ,KAAK,IAAI,IAAI,IAAIA,KAAK,IAAIS,SAAS,IAAIT,KAAK,IAAI,EAAE;EAC5D;EAEOU,cAAc;IACnB,IAAI,CAAC,IAAI,CAACH,aAAa,EAAE,EACvBI,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,mCAAmC,CAAC;EAChE;EAEOZ,WAAW;IAChBC,YAAY,CAACY,UAAU,CAAC,IAAI,CAACV,KAAK,CAAC;EACrC;;AAnDWtB,cAAe;mBAAfA,cAAc,cAEL,UAAU;AAAA;AAFnBA,cAAe;SAAfA,cAAc;EAAAiC,SAAdjC,cAAc;EAAAkC,YAFb;AAAM","names":["AbstractHttpService","UsuarioService","constructor","baseUrl","httpClient","inserir","usuario","post","getUsuarios","get","excluir","id","delete","autoCadastro","login","senha","Login","Senha","autenticar","token","limparDados","localStorage","setItem","TOKEN","replaceAll","logout","isAutenticado","getItem","undefined","validarUsuario","window","location","replace","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\projetos\\fisica\\Fisica\\src\\Fisica.Website\\ClientApp\\src\\app\\shared\\services\\usuario.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { UsuarioLoginModel } from '../models/usuario-login.model';\r\nimport { Usuario } from '../models/usuario.model';\r\nimport { AbstractHttpService } from './abstract-http.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService extends AbstractHttpService {\n\n  constructor(@Inject('BASE_URL') baseUrl: string, httpClient: HttpClient) {\r\n    super(baseUrl, httpClient, 'api/usuario');\r\n  }\n\n  public inserir(usuario: Usuario): Observable<Usuario> {\n    return this.post<Usuario>('inserir', usuario);\r\n  }\n\n  public getUsuarios(): Observable<Usuario[]> {\n    return this.get<Usuario[]>('buscar-usuarios');\r\n  }\n\n  public excluir(id: number): Observable<any> {\n    return this.delete<any>(`excluir/${id}`);\r\n  }\n\n  public autoCadastro(usuario: Usuario) {\n    return this.post<Usuario>('autocadastro', usuario);\r\n  }\n\n  //Autenticacao\r\n  TOKEN: string = 'TOKEN';\n\n  public login(login: string, senha: string): Observable<UsuarioLoginModel> {\n    return this.post<UsuarioLoginModel>('login', { Login: login, Senha: senha });\r\n  }\n\n  async autenticar(token: string): Promise<void> {\r\n    this.limparDados();\r\n    localStorage.setItem(this.TOKEN, token.replaceAll(\"\\\"\", \"\"));\r\n  }\n\n  public logout(): Observable<any> | null {\r\n    this.limparDados();\r\n    return null;\r\n  }\n\n  public isAutenticado(): boolean {\r\n    const token = localStorage.getItem(this.TOKEN);\r\n    return (token != null && token != undefined && token != '');\r\n  }\n\n  public validarUsuario() {\r\n    if (!this.isAutenticado())\r\n      window.location.replace('http://localhost:49828/#/website/');\r\n  }\n\n  public limparDados() {\r\n    localStorage.removeItem(this.TOKEN);\r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}